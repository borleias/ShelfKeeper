version: '3.8'

services:
  webapi:
    build:
      context: .
      dockerfile: src/ShelfKeeper.WebApi/Dockerfile
    container_name: shelfkeeper-webapi
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=shelfkeeper;Username=shelfkeeper;Password=shelfkeeper
    depends_on:
      - postgres
    restart: unless-stopped
    command: >
      bash -c "
        ./wait-for-it.sh postgres 5432 -- \
        dotnet ShelfKeeper.WebApi.dll
      "

  postgres:
    image: postgres:16
    container_name: shelfkeeper-postgres
    environment:
      - POSTGRES_USER=shelfkeeper
      - POSTGRES_PASSWORD=shelfkeeper
      - POSTGRES_DB=shelfkeeper
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped

  adminer:
    image: adminer
    container_name: shelfkeeper-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: shelfkeeper-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 5s
      timeout: 3s
      retries: 5
    depends_on:
      - webapi
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: shelfkeeper-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana:/var/lib/grafana
    environment:
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_ADDR=0.0.0.0
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  default:
    driver: bridge